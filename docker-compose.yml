version: "3"
services:
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - '9093:9093'
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper
  postgresql-tradesdb:
    image: 'bitnami/postgresql:latest'
    environment:
      - POSTGRESQL_USERNAME=trades_user
      - POSTGRESQL_PASSWORD=password123
      - POSTGRESQL_DATABASE=tradesdb
      - POSTGRESQL_POSTGRES_PASSWORD=password123
  postgresql-servingdb:
    image: 'bitnami/postgresql:latest'
    environment:
      - POSTGRESQL_USERNAME=serving_user
      - POSTGRESQL_PASSWORD=password123
      - POSTGRESQL_DATABASE=servingdb
      - POSTGRESQL_POSTGRES_PASSWORD=password123

  grafana:
    image: 'bitnami/grafana:latest'
    ports:
      - '3000:3000'
    volumes:
      - grafana-volume:/bitnami/grafana
  influxdb:
    image: 'bitnami/influxdb:latest'
    environment:
      - INFLUXDB_HTTP_AUTH_ENABLED=false
      - INFLUXDB_DB=market_data_load_monitoring
      - INFLUXDB_USER=market_monitoring
      - INFLUXDB_USER_PASSWORD=password123
      - INFLUXDB_ADMIN_ENABLED=true
      - INFLUXDB_ADMIN_USER=admin
      - INFLUXDB_ADMIN_USER_PASSWORD=32sd33asd21df987as
      - INFLUXDB_ADMIN_USER_TOKEN=dsfsdf1jdhadjan54skdnajsbd123jasbdjas
    volumes:
      - influxdb-volume:/bitnami/influxdb
  spark:
    image: 'bitnami/spark:2.4.6'
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    ports:
      - '8080:8080'
  spark-worker-1:
    image: 'bitnami/spark:2.4.6'
    ports:
      - '8083:8083'
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark:7077
      - SPARK_WORKER_MEMORY=1g
      - SPARK_WORKER_CORES=1
      - SPARK_WORKER_WEBUI_PORT=8083
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    depends_on:
      - spark
  spark-worker-2:
    image: 'bitnami/spark:2.4.6'
    ports:
      - '8082:8082'
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark:7077
      - SPARK_WORKER_MEMORY=1g
      - SPARK_WORKER_CORES=1
      - SPARK_WORKER_WEBUI_PORT=8082
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    depends_on:
      - spark
  sse:
    build:
      context: .
      dockerfile: Dockerfile-sse
#    restart: on-failure
    restart: always
    depends_on:
      - postgresql-servingdb
      - postgresql-tradesdb
      - kafka
      - spark
      - spark-worker
  mdl:
    build:
      context: .
      dockerfile: Dockerfile-mdl
    restart: on-failure
    depends_on:
      - sse


volumes:
  grafana-volume:
    external: true
  influxdb-volume:
    external: true